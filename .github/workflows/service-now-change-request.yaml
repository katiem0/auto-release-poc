on:
  pull_request:
    types: [opened]

jobs:
  servicenow-integration:
    runs-on: ubuntu-latest
    env: 
      SNOW_URL: ${{ vars.SNOW_URL }}
      SNOW_USERNAME: ${{ secrets.SNOW_USERNAME }}
      SNOW_PASSWORD: ${{ secrets.SNOW_PASSWORD }}
    steps:
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '20'
      - name: install axios
        run: npm install axios
      - name: Submit change request to ServiceNow
        id: create-request
        run: |
          const axios = require('axios')
          const url = `${process.env.SNOWURL}/api/sn_chg_rest/change/normal`
          const username = process.env.SNOW_USERNAME
          const password = process.env.SNOW_PASSWORD
          const auth = {
            username: username,
            password: password
          }
          const body = {
            "short_description": "pc-test",
            "description": "This is a description of the standard change request.",
            "assignment_group": "assignment_group_sys_id",
            "requested_by": "requested_by_user_sys_id"
          }
          const response = await axios.post(url, body, { auth })
          console.log(`Created request: ${response.data.number.display_value}`)
          core.setOutput('sys_id', response.data.number.sys_id.value);
      - name: Get change request from ServiceNow
        id: get-request
        run: |
          const axios = require('axios')
          const url = `${process.env.SNOWURL}/api/sn_chg_rest/change/normal/${{steps.create-request.outputs.sys_id}}`
          const username = process.env.SNOW_USERNAME
          const password = process.env.SNOW_PASSWORD
          const auth = {
            username: username,
            password: password
          }
          while (response && response.data.result.state.value !== '3') {
            console.log(`Request state: ${response.data.result.state.display_value}`)
            await new Promise(r => setTimeout(r, 5000));
            response = await axios.get(url, { auth })
          }
          core.setOutput('state', response.data.result.state.approval_history.display_value);
      - name: Update PR with Service Now 
        uses: actions/github-script@v7
        with:
          script: |
            github.pullRequests.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
              body: 'ServiceNow Request: ${{ steps.get-request.outputs.state }}'
            })

        
